{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n// types\nimport { LayoutEventType } from 'src/app/core/constants/events';\n// layout constants\nimport { LayoutType, SideBarWidth } from '../models/layout.model';\nlet TopbarComponent = class TopbarComponent {\n  constructor(authService, eventService, router) {\n    this.authService = authService;\n    this.eventService = eventService;\n    this.router = router;\n    this.hideLogo = false;\n    this.cssClasses = '';\n    this.layoutType = '';\n    this.languages = [];\n    this.apps = [];\n    this.searchResults = [];\n    this.loggedInUser = null;\n    this.topnavCollapsed = false;\n    // output events\n    this.settingsButtonClicked = new EventEmitter();\n    this.mobileMenuButtonClicked = new EventEmitter();\n  }\n  ngOnInit() {\n    // get supported languages\n    this._fetchLanguages();\n  }\n  /**\n   * Fetches supported languages\n   */\n  _fetchLanguages() {\n    this.languages = [{\n      id: 1,\n      name: 'English',\n      flag: 'assets/images/flags/us.jpg'\n    }, {\n      id: 2,\n      name: 'German',\n      flag: 'assets/images/flags/germany.jpg'\n    }, {\n      id: 3,\n      name: 'Italian',\n      flag: 'assets/images/flags/italy.jpg'\n    }, {\n      id: 4,\n      name: 'Spanish',\n      flag: 'assets/images/flags/spain.jpg'\n    }, {\n      id: 5,\n      name: 'Russian',\n      flag: 'assets/images/flags/russia.jpg'\n    }];\n    this.selectedLanguage = this.languages[0];\n  }\n  /**\n  * Change the language\n  * @param language selected language from dropdown\n  */\n  changeLanguage(language) {\n    this.selectedLanguage = language;\n  }\n  /**\n   * Toggles the right sidebar\n   */\n  toggleRightSidebar() {\n    this.settingsButtonClicked.emit();\n  }\n  /*\n  * Toggle left sidebar width - condensed\n  */\n  toggleSidebarWidth() {\n    switch (this.layoutType) {\n      case LayoutType.LAYOUT_VERTICAL:\n        if (document.body.hasAttribute('data-leftbar-compact-mode') && document.body.getAttribute('data-leftbar-compact-mode') === 'condensed') {\n          // document.body.removeAttribute('data-leftbar-compact-mode');\n          this.eventService.broadcast(LayoutEventType.CHANGE_LEFT_SIDEBAR_TYPE, SideBarWidth.SIDEBAR_WIDTH_FIXED);\n        } else {\n          // document.body.setAttribute('data-leftbar-compact-mode', 'condensed');\n          this.eventService.broadcast(LayoutEventType.CHANGE_LEFT_SIDEBAR_TYPE, SideBarWidth.SIDEBAR_WIDTH_CONDENSED);\n        }\n        break;\n      case LayoutType.LAYOUT_FULL:\n        document.body.classList.toggle('hide-menu');\n        document.body.classList.toggle('sidebar-enable');\n    }\n  }\n  /**\n   * Toggle the menu bar when having mobile screen\n   */\n  toggleMobileMenu(event) {\n    this.topnavCollapsed = !this.topnavCollapsed;\n    event.preventDefault();\n    this.mobileMenuButtonClicked.emit();\n  }\n  onOptionClick(event, route) {\n    if (route) {\n      if (route === '.') {\n        event.preventDefault();\n      } else {\n        this.router.navigateByUrl(route);\n      }\n    }\n  }\n};\n__decorate([Input()], TopbarComponent.prototype, \"hideLogo\", void 0);\n__decorate([Input()], TopbarComponent.prototype, \"cssClasses\", void 0);\n__decorate([Input()], TopbarComponent.prototype, \"layoutType\", void 0);\n__decorate([Output()], TopbarComponent.prototype, \"settingsButtonClicked\", void 0);\n__decorate([Output()], TopbarComponent.prototype, \"mobileMenuButtonClicked\", void 0);\nTopbarComponent = __decorate([Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss']\n})], TopbarComponent);\nexport { TopbarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}