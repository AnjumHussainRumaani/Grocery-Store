{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\n// type\nimport { LayoutEventType } from 'src/app/core/constants/events';\n// layout constants\nimport { LayoutColor, LayoutType, LayoutWidth, SideBarTheme, SideBarWidth } from '../models/layout.model';\nlet RightSideBarComponent = class RightSideBarComponent {\n  constructor(renderer, eventService) {\n    // listen to event and open/hide the right sidebar\n    this.renderer = renderer;\n    this.eventService = eventService;\n    this.isShowing = false;\n    this.disableSidebarWidth = false;\n    this.rightSidebarClass = 'end-bar-enabled';\n    // show\n    this.eventService.subscribe(LayoutEventType.SHOW_RIGHT_SIDEBAR, () => {\n      this.show();\n    });\n    // hide\n    this.eventService.subscribe(LayoutEventType.HIDE_RIGHT_SIDEBAR, () => {\n      this.hide();\n    });\n  }\n  ngOnInit() {}\n  ngOnChanges() {\n    if (this.isShowing) {\n      this.renderer.addClass(document.body, this.rightSidebarClass);\n    } else {\n      this.renderer.removeClass(document.body, this.rightSidebarClass);\n    }\n    if (window.innerWidth <= 1024 && this.layoutType === 'full') {\n      this.disableSidebarWidth = true;\n    } else {\n      this.disableSidebarWidth = false;\n    }\n  }\n  /**\n   * Toggle the sidebar\n   */\n  toggleRightSideBar() {\n    if (document.body.classList.contains(this.rightSidebarClass)) {\n      this.renderer.removeClass(document.body, this.rightSidebarClass);\n    } else {\n      this.renderer.addClass(document.body, this.rightSidebarClass);\n    }\n  }\n  /**\n   * Shows the sidebar\n   */\n  show() {\n    setTimeout(() => {\n      this.isShowing = true;\n      this.renderer.addClass(document.body, this.rightSidebarClass);\n    }, 100);\n  }\n  /**\n   * Hide the sidebar\n   */\n  hide() {\n    if (document.body.classList.contains(this.rightSidebarClass)) {\n      this.renderer.removeClass(document.body, this.rightSidebarClass);\n      this.isShowing = false;\n    }\n  }\n  /**\n   * Change the given layout\n   * @param layout layout name\n  */\n  changeLayout(layout) {\n    this.layoutType = layout;\n    this.eventService.broadcast(LayoutEventType.CHANGE_LAYOUT, this.layoutType);\n  }\n  /**\n   * Change the color\n   * @param layout color type\n   */\n  changeColorScheme(color) {\n    this.layoutColor = color;\n    this.eventService.broadcast(LayoutEventType.CHANGE_LAYOUT_COLOR, this.layoutColor);\n  }\n  /**\n  * Change the width\n  * @param layout width type\n  */\n  changeLayoutWidth(width) {\n    this.layoutWidth = width;\n    this.eventService.broadcast(LayoutEventType.CHANGE_LAYOUT_WIDTH, this.layoutWidth);\n  }\n  /**\n   * Change the side bar theme\n   * @param theme name\n   */\n  changeLeftSidebarTheme(theme) {\n    this.leftSidebarTheme = theme;\n    this.eventService.broadcast(LayoutEventType.CHANGE_LEFT_SIDEBAR_THEME, this.leftSidebarTheme);\n  }\n  /**\n   * Change the side bar width\n   * @param type type of sidebar\n   */\n  changeLeftSidebarType(type) {\n    this.leftSidebarWidth = type;\n    this.eventService.broadcast(LayoutEventType.CHANGE_LEFT_SIDEBAR_TYPE, this.leftSidebarWidth);\n  }\n  /**\n   * Reset everything\n   */\n  reset() {\n    this.changeLayout(LayoutType.LAYOUT_VERTICAL);\n    this.changeColorScheme(LayoutColor.LAYOUT_COLOR_LIGHT);\n    this.changeLayoutWidth(LayoutWidth.LAYOUT_WIDTH_FLUID);\n    this.changeLeftSidebarType(SideBarWidth.SIDEBAR_WIDTH_FIXED);\n    this.changeLeftSidebarTheme(SideBarTheme.SIDEBAR_THEME_DEFAULT);\n  }\n};\n__decorate([Input()], RightSideBarComponent.prototype, \"layoutType\", void 0);\n__decorate([Input()], RightSideBarComponent.prototype, \"layoutWidth\", void 0);\n__decorate([Input()], RightSideBarComponent.prototype, \"leftSidebarTheme\", void 0);\n__decorate([Input()], RightSideBarComponent.prototype, \"leftSidebarWidth\", void 0);\n__decorate([Input()], RightSideBarComponent.prototype, \"layoutColor\", void 0);\nRightSideBarComponent = __decorate([Component({\n  selector: 'app-right-side-bar',\n  templateUrl: './right-side-bar.component.html',\n  styleUrls: ['./right-side-bar.component.scss']\n})], RightSideBarComponent);\nexport { RightSideBarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}