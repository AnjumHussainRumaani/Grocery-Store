{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"ng-apexcharts\";\nfunction WalletBalanceStatusComponent_ng_template_11_Template(rf, ctx) {}\nfunction WalletBalanceStatusComponent_ng_template_16_Template(rf, ctx) {}\nfunction WalletBalanceStatusComponent_ng_template_21_Template(rf, ctx) {}\nfunction WalletBalanceStatusComponent_ng_template_26_Template(rf, ctx) {}\nfunction WalletBalanceStatusComponent_apx_chart_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"apx-chart\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"series\", ctx_r1.chartOptions.series)(\"chart\", ctx_r1.chartOptions.chart)(\"xaxis\", ctx_r1.chartOptions.xaxis)(\"tooltip\", ctx_r1.chartOptions.tooltip)(\"stroke\", ctx_r1.chartOptions.stroke)(\"markers\", ctx_r1.chartOptions.markers)(\"fill\", ctx_r1.chartOptions.fill)(\"colors\", ctx_r1.chartOptions.colors)(\"yaxis\", ctx_r1.chartOptions.yaxis)(\"dataLabels\", ctx_r1.chartOptions.dataLabels);\n  }\n}\nexport class WalletBalanceStatusComponent {\n  constructor() {\n    this.active = 'day';\n    this.chartOptions = {};\n    this.dayBalanceData = [];\n    this.weekBalanceData = [];\n    this.monthBalanceData = [];\n    this.yearBalanceData = [];\n    this.chartData = [];\n  }\n  ngOnInit() {\n    this.dayBalanceData = this.getDayBalance();\n    this.weekBalanceData = this.getWeekBalance();\n    this.monthBalanceData = this.getMonthBalance();\n    this.yearBalanceData = this.getYearBalance();\n    this.initChart();\n  }\n  /**\n   * initialize chart\n   */\n  initChart() {\n    this.chartOptions = {\n      chart: {\n        type: 'area',\n        height: 350,\n        toolbar: {\n          show: false\n        }\n      },\n      colors: ['#0acf97'],\n      dataLabels: {\n        enabled: false\n      },\n      series: this.dayBalanceData,\n      stroke: {\n        width: 1\n      },\n      markers: {\n        size: 0\n        // style: 'hollow',\n      },\n      xaxis: {\n        type: 'datetime',\n        // min: new Date('01 Mar 2012').getTime(),\n        tickAmount: 6\n      },\n      yaxis: {\n        labels: {\n          formatter: function (value) {\n            return \"$\" + value;\n          }\n        }\n      },\n      tooltip: {\n        x: {\n          format: 'dd MMM yyyy'\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.7,\n          opacityTo: 0,\n          stops: [0, 100]\n        }\n      }\n    };\n  }\n  /**\n   * return time wise data\n   */\n  // getData(dayCount: number, data: number[]): [number, number][] {\n  //   let balanceData: [number, number][] = [];\n  //   for (let i = 0; i < 100; i++) {\n  //     let start = new Date();\n  //     balanceData.push([start.setDate(start.getDate() + i * dayCount - 100 * dayCount), data[i]]);\n  //   }\n  //   return balanceData\n  // }\n  changeChartData(event) {\n    switch (this.active) {\n      case 'day':\n        this.chartOptions.series = this.dayBalanceData;\n        break;\n      case 'week':\n        this.chartOptions.series = this.weekBalanceData;\n        break;\n      case 'month':\n        this.chartOptions.series = this.monthBalanceData;\n        break;\n      case 'year':\n        this.chartOptions.series = this.yearBalanceData;\n        break;\n      default:\n        this.chartOptions.series = this.dayBalanceData;\n        break;\n    }\n    console.log(this.chartOptions.series, this.active);\n  }\n  /**\n   * generates random data\n   */\n  generateData() {\n    var balanceData = [];\n    for (var i = 0; i < 100; i++) {\n      balanceData.push(5000 + Math.random() * 100000 + 0.8 * i * i * i);\n    }\n    return balanceData;\n  }\n  getDayBalance() {\n    let dayDummyData = this.generateData();\n    let dayBalanceData = [];\n    for (let i = 0; i < 100; i++) {\n      let start = new Date();\n      dayBalanceData.push([start.setDate(start.getDate() + i - 100), dayDummyData[i]]);\n    }\n    return [{\n      data: dayBalanceData\n    }];\n  }\n  getWeekBalance() {\n    let weekDummyData = this.generateData();\n    let weekBalanceData = [];\n    for (let i = 0; i < 100; i++) {\n      let start = new Date();\n      weekBalanceData.push([start.setDate(start.getDate() + i * 7 - 100 * 7), weekDummyData[i]]);\n    }\n    return [{\n      data: weekBalanceData\n    }];\n  }\n  getMonthBalance() {\n    let monthDummyData = this.generateData();\n    let monthBalanceData = [];\n    for (let i = 0; i < 100; i++) {\n      let start = new Date();\n      monthBalanceData.push([start.setDate(start.getDate() + i * 30 - 100 * 30), monthDummyData[i]]);\n    }\n    return [{\n      data: monthBalanceData\n    }];\n  }\n  getYearBalance() {\n    let yearDummyData = this.generateData();\n    let yearBalanceData = [];\n    for (let i = 0; i < 100; i++) {\n      let start = new Date();\n      yearBalanceData.push([start.setDate(start.getDate() + i * 365 - 100 * 365), yearDummyData[i]]);\n    }\n    return [{\n      data: yearBalanceData\n    }];\n  }\n  static #_ = this.ɵfac = function WalletBalanceStatusComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || WalletBalanceStatusComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WalletBalanceStatusComponent,\n    selectors: [[\"app-wallet-balance-status\"]],\n    decls: 30,\n    vars: 3,\n    consts: [[\"nav\", \"ngbNav\"], [1, \"card\"], [1, \"card-body\"], [1, \"align-items-center\", \"d-sm-flex\", \"justify-content-sm-between\", \"mb-3\"], [1, \"header-title\", \"mb-0\"], [\"ngbNav\", \"\", 1, \"nav-pills\", \"bg-nav-pills\", \"p-1\", \"rounded\", 3, \"activeIdChange\", \"activeId\"], [\"ngbNavItem\", \"day\"], [\"ngbNavLink\", \"\", 1, \"py-1\"], [1, \"\"], [\"ngbNavContent\", \"\"], [\"ngbNavItem\", \"week\"], [\"ngbNavItem\", \"month\"], [\"ngbNavItem\", \"year\"], [3, \"ngbNavOutlet\"], [\"dir\", \"ltr\"], [\"class\", \"apex-charts\", 3, \"series\", \"chart\", \"xaxis\", \"tooltip\", \"stroke\", \"markers\", \"fill\", \"colors\", \"yaxis\", \"dataLabels\", 4, \"ngIf\"], [1, \"apex-charts\", 3, \"series\", \"chart\", \"xaxis\", \"tooltip\", \"stroke\", \"markers\", \"fill\", \"colors\", \"yaxis\", \"dataLabels\"]],\n    template: function WalletBalanceStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"h4\", 4);\n        i0.ɵɵtext(4, \"Balance Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ul\", 5, 0);\n        i0.ɵɵtwoWayListener(\"activeIdChange\", function WalletBalanceStatusComponent_Template_ul_activeIdChange_5_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.active, $event) || (ctx.active = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵlistener(\"activeIdChange\", function WalletBalanceStatusComponent_Template_ul_activeIdChange_5_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.changeChartData($event));\n        });\n        i0.ɵɵelementStart(7, \"li\", 6)(8, \"a\", 7)(9, \"span\", 8);\n        i0.ɵɵtext(10, \"Day\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, WalletBalanceStatusComponent_ng_template_11_Template, 0, 0, \"ng-template\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"li\", 10)(13, \"a\", 7)(14, \"span\", 8);\n        i0.ɵɵtext(15, \"Week\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, WalletBalanceStatusComponent_ng_template_16_Template, 0, 0, \"ng-template\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"li\", 11)(18, \"a\", 7)(19, \"span\", 8);\n        i0.ɵɵtext(20, \"Month\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(21, WalletBalanceStatusComponent_ng_template_21_Template, 0, 0, \"ng-template\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"li\", 12)(23, \"a\", 7)(24, \"span\", 8);\n        i0.ɵɵtext(25, \"Year\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, WalletBalanceStatusComponent_ng_template_26_Template, 0, 0, \"ng-template\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(27, \"div\", 13);\n        i0.ɵɵelementStart(28, \"div\", 14);\n        i0.ɵɵtemplate(29, WalletBalanceStatusComponent_apx_chart_29_Template, 1, 10, \"apx-chart\", 15);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const nav_r3 = i0.ɵɵreference(6);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtwoWayProperty(\"activeId\", ctx.active);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngbNavOutlet\", nav_r3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.chartOptions);\n      }\n    },\n    dependencies: [i1.NgIf, i2.NgbNavContent, i2.NgbNav, i2.NgbNavItem, i2.NgbNavLink, i2.NgbNavOutlet, i3.ChartComponent]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}