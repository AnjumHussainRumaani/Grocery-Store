{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth.service\";\nexport class ErrorInterceptor {\n  constructor(authenticationService) {\n    this.authenticationService = authenticationService;\n  }\n  intercept(request, next) {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.authenticationService.logout();\n        location.reload();\n      }\n      const error = err.error.message || err.statusText;\n      return throwError(error);\n    }));\n  }\n  static #_ = this.ɵfac = function ErrorInterceptor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ErrorInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}