{"ast":null,"code":"import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LOCALE_ID } from '@angular/core';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { QuillModule } from 'ngx-quill';\nimport { ErrorInterceptor } from './core/helpers/error.interceptor';\nimport { FakeBackendProvider } from './core/helpers/fake-backend';\nimport { JwtInterceptor } from './core/helpers/jwt.interceptor';\nimport { LayoutModule } from './layouts/layout.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-quill\";\nexport class AppModule {\n  static #_ = this.ɵfac = function AppModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AppModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [Title, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    // provider used to create fake backend\n    FakeBackendProvider, {\n      provide: LOCALE_ID,\n      useValue: 'en-US'\n    }],\n    imports: [BrowserModule, HttpClientModule, QuillModule.forRoot(), LayoutModule, AppRoutingModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, HttpClientModule, i1.QuillModule, LayoutModule, AppRoutingModule]\n  });\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}