{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"simplebar-angular\";\nconst _c0 = [\"chatForm\"];\nconst _c1 = a0 => ({\n  \"is-invalid\": a0\n});\nconst _c2 = a0 => ({\n  \"odd\": a0\n});\nfunction ChatComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 12)(1, \"div\", 13);\n    i0.ɵɵelement(2, \"img\", 14);\n    i0.ɵɵelementStart(3, \"i\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 15)(6, \"div\", 16)(7, \"i\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c2, message_r2.sender.name === \"Dominic\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", message_r2.sender.avatar, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.time);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(message_r2.sender.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r2.message, \" \");\n  }\n}\nexport class ChatComponent {\n  constructor() {\n    this.chatMessages = [];\n    this.listContainerClass = '';\n    this.formContainerClass = '';\n    this.newMessage = \"\";\n    this.submitted = false;\n  }\n  ngOnInit() {}\n  /**\n   * adds new message to chat messages\n   */\n  sendMessage() {\n    this.submitted = true;\n    if (this.newMessage !== '') {\n      var today = new Date();\n      const newChatMessage = {\n        id: this.chatMessages.length + 1,\n        sender: {\n          name: 'Dominic',\n          avatar: 'assets/images/users/avatar-5.jpg'\n        },\n        time: today.getHours() + \":\" + today.getMinutes(),\n        message: this.newMessage\n      };\n      this.chatMessages.push(newChatMessage);\n      this.chatForm.resetForm();\n    }\n  }\n  static #_ = this.ɵfac = function ChatComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ChatComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-widget-chat\"]],\n    viewQuery: function ChatComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatForm = _t.first);\n      }\n    },\n    inputs: {\n      chatMessages: \"chatMessages\",\n      listContainerClass: \"listContainerClass\",\n      formContainerClass: \"formContainerClass\"\n    },\n    decls: 15,\n    vars: 9,\n    consts: [[\"chatForm\", \"ngForm\"], [1, \"chat-conversation\"], [2, \"height\", \"322px\"], [1, \"conversation-list\"], [\"class\", \"clearfix\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"chat-form\", 3, \"ngSubmit\"], [1, \"row\"], [1, \"col\"], [\"type\", \"text\", \"placeholder\", \"Enter your text\", \"required\", \"\", \"name\", \"new-message\", 1, \"form-control\", \"chat-input\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\"], [1, \"invalid-feedback\"], [1, \"col-auto\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"chat-send\", \"waves-effect\", \"waves-light\"], [1, \"clearfix\", 3, \"ngClass\"], [1, \"chat-avatar\"], [\"alt\", \"user\", 3, \"src\"], [1, \"conversation-text\"], [1, \"ctext-wrap\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"ngx-simplebar\", 2)(2, \"ul\", 3);\n        i0.ɵɵtemplate(3, ChatComponent_li_3_Template, 11, 7, \"li\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\")(5, \"form\", 5, 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ChatComponent_Template_form_ngSubmit_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.sendMessage());\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"input\", 8);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_9_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.newMessage, $event) || (ctx.newMessage = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵtext(11, \" Please enter your messsage \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"button\", 11);\n        i0.ɵɵtext(14, \"Send\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.listContainerClass);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.formContainerClass);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newMessage);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx.submitted && ctx.newMessage === \"\"));\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.SimplebarAngularComponent]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}