{"ast":null,"code":"import { EventEmitter } from '@angular/core';\n// types\nimport { LayoutEventType } from 'src/app/core/constants/events';\n// layout constants\nimport { LayoutType, SideBarWidth } from '../models/layout.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/service/auth.service\";\nimport * as i2 from \"src/app/core/service/event.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nconst _c0 = a0 => ({\n  \"open\": a0\n});\nfunction TopbarComponent_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 16)(1, \"span\", 17);\n    i0.ɵɵelement(2, \"img\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 19);\n    i0.ɵɵelement(4, \"img\", 20);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TopbarComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TopbarComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleSidebarWidth());\n    });\n    i0.ɵɵelement(1, \"i\", 22);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TopbarComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function TopbarComponent_button_14_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleMobileMenu($event));\n    });\n    i0.ɵɵelement(1, \"i\", 22);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TopbarComponent_a_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 24);\n    i0.ɵɵlistener(\"click\", function TopbarComponent_a_15_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleMobileMenu($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵelement(2, \"span\")(3, \"span\")(4, \"span\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx_r1.topnavCollapsed));\n  }\n}\nfunction TopbarComponent_a_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 26);\n    i0.ɵɵlistener(\"click\", function TopbarComponent_a_16_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleMobileMenu($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵelement(2, \"span\")(3, \"span\")(4, \"span\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TopbarComponent {\n  constructor(authService, eventService, router) {\n    this.authService = authService;\n    this.eventService = eventService;\n    this.router = router;\n    this.hideLogo = false;\n    this.cssClasses = '';\n    this.layoutType = '';\n    this.languages = [];\n    this.apps = [];\n    this.searchResults = [];\n    this.loggedInUser = null;\n    this.topnavCollapsed = false;\n    // output events\n    this.settingsButtonClicked = new EventEmitter();\n    this.mobileMenuButtonClicked = new EventEmitter();\n  }\n  ngOnInit() {\n    this.loggedInUser = this.authService.currentUser();\n    // get notifications\n    this._fetchNotifications();\n    // get supported languages\n    this._fetchLanguages();\n    // get apps\n    this._fetchApps();\n    // get search results\n    this._fetchSearchData();\n  }\n  /**\n   * Fetches notifications\n   */\n  /**\n   * Fetches supported languages\n   */\n  _fetchLanguages() {\n    this.languages = [{\n      id: 1,\n      name: 'English',\n      flag: 'assets/images/flags/us.jpg'\n    }, {\n      id: 2,\n      name: 'German',\n      flag: 'assets/images/flags/germany.jpg'\n    }, {\n      id: 3,\n      name: 'Italian',\n      flag: 'assets/images/flags/italy.jpg'\n    }, {\n      id: 4,\n      name: 'Spanish',\n      flag: 'assets/images/flags/spain.jpg'\n    }, {\n      id: 5,\n      name: 'Russian',\n      flag: 'assets/images/flags/russia.jpg'\n    }];\n    this.selectedLanguage = this.languages[0];\n  }\n  /**\n   * Fetches brands\n   */\n  _fetchApps() {\n    this.apps = [{\n      id: 1,\n      name: 'Slack',\n      logo: 'assets/images/brands/slack.png'\n    }, {\n      id: 2,\n      name: 'Github',\n      logo: 'assets/images/brands/github.png'\n    }, {\n      id: 3,\n      name: 'Dribbble',\n      logo: 'assets/images/brands/dribbble.png'\n    }, {\n      id: 4,\n      name: 'Bitbucket',\n      logo: 'assets/images/brands/bitbucket.png'\n    }, {\n      id: 5,\n      name: 'Dropbox',\n      logo: 'assets/images/brands/dropbox.png'\n    }, {\n      id: 6,\n      name: 'G Suite',\n      logo: 'assets/images/brands/g-suite.png'\n    }];\n  }\n  /**\n   * Fetches profile options\n   */\n  _fetchProfileOptions() {\n    this.profileOptions = [{\n      label: 'My Account',\n      icon: 'mdi mdi-account-circle',\n      redirectTo: '.'\n    }, {\n      label: 'Settings',\n      icon: 'mdi mdi-account-edit',\n      redirectTo: '.'\n    }, {\n      label: 'Support',\n      icon: 'mdi mdi-lifebuoy',\n      redirectTo: '.'\n    }, {\n      label: 'Lock Screen',\n      icon: 'mdi mdi-lock-outline',\n      redirectTo: '/account/lock-screen'\n    }, {\n      label: 'Logout',\n      icon: 'mdi mdi-logout',\n      redirectTo: '/account/logout'\n    }];\n  }\n  /**\n   * Fetches search results\n   */\n  _fetchSearchData() {\n    this.searchResults = [{\n      id: 1,\n      text: 'Analytics Report',\n      icon: 'uil-notes'\n    }, {\n      id: 2,\n      text: 'How can I help you?',\n      icon: 'uil-life-ring'\n    }, {\n      id: 3,\n      text: 'User profile settings',\n      icon: 'uil-cog'\n    }];\n    this.searchUsers = [{\n      id: 1,\n      name: 'Erwin Brown',\n      position: 'UI Designer',\n      profile: 'assets/images/users/avatar-2.jpg'\n    }, {\n      id: 2,\n      name: 'Jacob Deo',\n      position: 'Developer',\n      profile: 'assets/images/users/avatar-5.jpg'\n    }];\n  }\n  /**\n  * Change the language\n  * @param language selected language from dropdown\n  */\n  changeLanguage(language) {\n    this.selectedLanguage = language;\n  }\n  /**\n   * Toggles the right sidebar\n   */\n  toggleRightSidebar() {\n    this.settingsButtonClicked.emit();\n  }\n  /*\n  * Toggle left sidebar width - condensed\n  */\n  toggleSidebarWidth() {\n    switch (this.layoutType) {\n      case LayoutType.LAYOUT_VERTICAL:\n        if (document.body.hasAttribute('data-leftbar-compact-mode') && document.body.getAttribute('data-leftbar-compact-mode') === 'condensed') {\n          // document.body.removeAttribute('data-leftbar-compact-mode');\n          this.eventService.broadcast(LayoutEventType.CHANGE_LEFT_SIDEBAR_TYPE, SideBarWidth.SIDEBAR_WIDTH_FIXED);\n        } else {\n          // document.body.setAttribute('data-leftbar-compact-mode', 'condensed');\n          this.eventService.broadcast(LayoutEventType.CHANGE_LEFT_SIDEBAR_TYPE, SideBarWidth.SIDEBAR_WIDTH_CONDENSED);\n        }\n        break;\n      case LayoutType.LAYOUT_FULL:\n        document.body.classList.toggle('hide-menu');\n        document.body.classList.toggle('sidebar-enable');\n    }\n  }\n  /**\n   * Toggle the menu bar when having mobile screen\n   */\n  toggleMobileMenu(event) {\n    this.topnavCollapsed = !this.topnavCollapsed;\n    event.preventDefault();\n    this.mobileMenuButtonClicked.emit();\n  }\n  onOptionClick(event, route) {\n    if (route) {\n      if (route === '.') {\n        event.preventDefault();\n      } else {\n        this.router.navigateByUrl(route);\n      }\n    }\n  }\n  static #_ = this.ɵfac = function TopbarComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TopbarComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.EventService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TopbarComponent,\n    selectors: [[\"app-topbar\"]],\n    inputs: {\n      hideLogo: \"hideLogo\",\n      cssClasses: \"cssClasses\",\n      layoutType: \"layoutType\"\n    },\n    outputs: {\n      settingsButtonClicked: \"settingsButtonClicked\",\n      mobileMenuButtonClicked: \"mobileMenuButtonClicked\"\n    },\n    decls: 17,\n    vars: 9,\n    consts: [[1, \"navbar-custom\"], [\"routerLink\", \"/\", \"class\", \"topnav-logo\", 4, \"ngIf\"], [1, \"list-unstyled\", \"topbar-menu\", \"float-end\", \"mb-0\"], [\"ngbDropdown\", \"\", \"autoClose\", \"outside\", 1, \"dropdown\", \"notification-list\", \"d-xl-none\"], [\"ngbDropdownToggle\", \"\", \"id\", \"mobileDropdown\", \"href\", \"javascript: void(0);\", \"aria-expanded\", \"false\", 1, \"nav-link\", \"dropdown-toggle\", \"arrow-none\"], [1, \"dripicons-search\", \"noti-icon\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"mobileDropdown\", 1, \"dropdown-menu-animated\", \"dropdown-lg\", \"p-0\"], [\"ngbDropdownItem\", \"\", 1, \"p-3\"], [\"type\", \"text\", \"placeholder\", \"Search ...\", \"aria-label\", \"Recipient's username\", 1, \"form-control\"], [1, \"notification-list\"], [\"href\", \"javascript:void(0);\", 1, \"nav-link\", \"end-bar-toggle\", 3, \"click\"], [1, \"dripicons-gear\", \"noti-icon\"], [\"class\", \"button-menu-mobile open-left d-none d-md-block\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"button-menu-mobile open-left disable-btn d-md-none\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"navbar-toggle open-left\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"button-menu-mobile open-left disable-btn\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"/\", 1, \"topnav-logo\"], [1, \"topnav-logo-lg\"], [\"src\", \"assets/images/logo-light.png\", \"alt\", \"\", \"height\", \"16\"], [1, \"topnav-logo-sm\"], [\"src\", \"assets/images/logo_sm_dark.png\", \"alt\", \"\", \"height\", \"16\"], [1, \"button-menu-mobile\", \"open-left\", \"d-none\", \"d-md-block\", 3, \"click\"], [1, \"mdi\", \"mdi-menu\", \"open-left-icon\"], [1, \"button-menu-mobile\", \"open-left\", \"disable-btn\", \"d-md-none\", 3, \"click\"], [1, \"navbar-toggle\", \"open-left\", 3, \"click\", \"ngClass\"], [1, \"lines\"], [1, \"button-menu-mobile\", \"open-left\", \"disable-btn\", 3, \"click\"]],\n    template: function TopbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n        i0.ɵɵtemplate(2, TopbarComponent_a_2_Template, 5, 0, \"a\", 1);\n        i0.ɵɵelementStart(3, \"ul\", 2)(4, \"li\", 3)(5, \"a\", 4);\n        i0.ɵɵelement(6, \"i\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n        i0.ɵɵelement(9, \"input\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"li\", 9)(11, \"a\", 10);\n        i0.ɵɵlistener(\"click\", function TopbarComponent_Template_a_click_11_listener() {\n          return ctx.toggleRightSidebar();\n        });\n        i0.ɵɵelement(12, \"i\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, TopbarComponent_button_13_Template, 2, 0, \"button\", 12)(14, TopbarComponent_button_14_Template, 2, 0, \"button\", 13)(15, TopbarComponent_a_15_Template, 5, 3, \"a\", 14)(16, TopbarComponent_a_16_Template, 5, 0, \"a\", 15);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cssClasses);\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.hideLogo ? \"\" : \"container-fluid\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideLogo);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutType === \"vertical\" || ctx.layoutType === \"full\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutType === \"vertical\" || ctx.layoutType === \"full\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutType === \"horizontal\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutType === \"detached\");\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i3.RouterLink, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.NgbDropdown, i6.NgbDropdownToggle, i6.NgbDropdownMenu, i6.NgbDropdownItem]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}