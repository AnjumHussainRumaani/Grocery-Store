{"ast":null,"code":"import { EventEmitter } from '@angular/core';\n// types\nimport { LayoutEventType } from 'src/app/core/constants/events';\n// layout constants\nimport { LayoutType, SideBarWidth } from '../models/layout.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/service/auth.service\";\nimport * as i2 from \"src/app/core/service/event.service\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = a0 => ({\n  \"open\": a0\n});\nfunction TopbarComponent_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 6)(1, \"span\", 7);\n    i0.ɵɵelement(2, \"img\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 9);\n    i0.ɵɵelement(4, \"img\", 10);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TopbarComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function TopbarComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleSidebarWidth());\n    });\n    i0.ɵɵelement(1, \"i\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TopbarComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TopbarComponent_button_4_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleMobileMenu($event));\n    });\n    i0.ɵɵelement(1, \"i\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TopbarComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function TopbarComponent_a_5_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleMobileMenu($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵelement(2, \"span\")(3, \"span\")(4, \"span\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx_r1.topnavCollapsed));\n  }\n}\nfunction TopbarComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 16);\n    i0.ɵɵlistener(\"click\", function TopbarComponent_a_6_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleMobileMenu($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵelement(2, \"span\")(3, \"span\")(4, \"span\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TopbarComponent {\n  constructor(authService, eventService, router) {\n    this.authService = authService;\n    this.eventService = eventService;\n    this.router = router;\n    this.hideLogo = false;\n    this.cssClasses = '';\n    this.layoutType = '';\n    this.languages = [];\n    this.apps = [];\n    this.searchResults = [];\n    this.loggedInUser = null;\n    this.topnavCollapsed = false;\n    // output events\n    this.settingsButtonClicked = new EventEmitter();\n    this.mobileMenuButtonClicked = new EventEmitter();\n  }\n  ngOnInit() {\n    // get supported languages\n    this._fetchLanguages();\n  }\n  /**\n   * Fetches supported languages\n   */\n  _fetchLanguages() {\n    this.languages = [{\n      id: 1,\n      name: 'English',\n      flag: 'assets/images/flags/us.jpg'\n    }, {\n      id: 2,\n      name: 'German',\n      flag: 'assets/images/flags/germany.jpg'\n    }, {\n      id: 3,\n      name: 'Italian',\n      flag: 'assets/images/flags/italy.jpg'\n    }, {\n      id: 4,\n      name: 'Spanish',\n      flag: 'assets/images/flags/spain.jpg'\n    }, {\n      id: 5,\n      name: 'Russian',\n      flag: 'assets/images/flags/russia.jpg'\n    }];\n    this.selectedLanguage = this.languages[0];\n  }\n  /**\n  * Change the language\n  * @param language selected language from dropdown\n  */\n  changeLanguage(language) {\n    this.selectedLanguage = language;\n  }\n  /**\n   * Toggles the right sidebar\n   */\n  toggleRightSidebar() {\n    this.settingsButtonClicked.emit();\n  }\n  /*\n  * Toggle left sidebar width - condensed\n  */\n  toggleSidebarWidth() {\n    switch (this.layoutType) {\n      case LayoutType.LAYOUT_VERTICAL:\n        if (document.body.hasAttribute('data-leftbar-compact-mode') && document.body.getAttribute('data-leftbar-compact-mode') === 'condensed') {\n          // document.body.removeAttribute('data-leftbar-compact-mode');\n          this.eventService.broadcast(LayoutEventType.CHANGE_LEFT_SIDEBAR_TYPE, SideBarWidth.SIDEBAR_WIDTH_FIXED);\n        } else {\n          // document.body.setAttribute('data-leftbar-compact-mode', 'condensed');\n          this.eventService.broadcast(LayoutEventType.CHANGE_LEFT_SIDEBAR_TYPE, SideBarWidth.SIDEBAR_WIDTH_CONDENSED);\n        }\n        break;\n      case LayoutType.LAYOUT_FULL:\n        document.body.classList.toggle('hide-menu');\n        document.body.classList.toggle('sidebar-enable');\n    }\n  }\n  /**\n   * Toggle the menu bar when having mobile screen\n   */\n  toggleMobileMenu(event) {\n    this.topnavCollapsed = !this.topnavCollapsed;\n    event.preventDefault();\n    this.mobileMenuButtonClicked.emit();\n  }\n  onOptionClick(event, route) {\n    if (route) {\n      if (route === '.') {\n        event.preventDefault();\n      } else {\n        this.router.navigateByUrl(route);\n      }\n    }\n  }\n  static #_ = this.ɵfac = function TopbarComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TopbarComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.EventService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TopbarComponent,\n    selectors: [[\"app-topbar\"]],\n    inputs: {\n      hideLogo: \"hideLogo\",\n      cssClasses: \"cssClasses\",\n      layoutType: \"layoutType\"\n    },\n    outputs: {\n      settingsButtonClicked: \"settingsButtonClicked\",\n      mobileMenuButtonClicked: \"mobileMenuButtonClicked\"\n    },\n    decls: 7,\n    vars: 9,\n    consts: [[1, \"navbar-custom\"], [\"routerLink\", \"/\", \"class\", \"topnav-logo\", 4, \"ngIf\"], [\"class\", \"button-menu-mobile open-left d-none d-md-block\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"button-menu-mobile open-left disable-btn d-md-none\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"navbar-toggle open-left\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"button-menu-mobile open-left disable-btn\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"/\", 1, \"topnav-logo\"], [1, \"topnav-logo-lg\"], [\"src\", \"assets/images/logo-light.png\", \"alt\", \"\", \"height\", \"16\"], [1, \"topnav-logo-sm\"], [\"src\", \"assets/images/logo_sm_dark.png\", \"alt\", \"\", \"height\", \"16\"], [1, \"button-menu-mobile\", \"open-left\", \"d-none\", \"d-md-block\", 3, \"click\"], [1, \"mdi\", \"mdi-menu\", \"open-left-icon\"], [1, \"button-menu-mobile\", \"open-left\", \"disable-btn\", \"d-md-none\", 3, \"click\"], [1, \"navbar-toggle\", \"open-left\", 3, \"click\", \"ngClass\"], [1, \"lines\"], [1, \"button-menu-mobile\", \"open-left\", \"disable-btn\", 3, \"click\"]],\n    template: function TopbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n        i0.ɵɵtemplate(2, TopbarComponent_a_2_Template, 5, 0, \"a\", 1)(3, TopbarComponent_button_3_Template, 2, 0, \"button\", 2)(4, TopbarComponent_button_4_Template, 2, 0, \"button\", 3)(5, TopbarComponent_a_5_Template, 5, 3, \"a\", 4)(6, TopbarComponent_a_6_Template, 5, 0, \"a\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cssClasses);\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.hideLogo ? \"\" : \"container-fluid\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideLogo);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutType === \"vertical\" || ctx.layoutType === \"full\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutType === \"vertical\" || ctx.layoutType === \"full\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutType === \"horizontal\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutType === \"detached\");\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}