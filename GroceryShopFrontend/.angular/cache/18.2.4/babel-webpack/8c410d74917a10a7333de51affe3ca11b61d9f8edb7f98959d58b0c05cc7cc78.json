{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\n// type\nimport { LayoutEventType } from 'src/app/core/constants/events';\nlet LayoutComponent = class LayoutComponent {\n  constructor(eventService) {\n    this.eventService = eventService;\n    this.configuredDemo = '';\n    this.topbarCssClasses = '';\n    this.topnavTheme = '';\n    this.topnavContainerClasses = '';\n    this.showMobileMenu = false;\n    this.reRender = true;\n    /**\n     * performs re-rendering\n     */\n    this._setRerender = () => {\n      this.reRender = false;\n      setTimeout(() => {\n        this.reRender = true;\n      }, 0.05);\n    };\n  }\n  ngOnInit() {\n    // css classes based on theme demo\n    this.topbarCssClasses = this.configuredDemo === 'creative' ? 'topnav-navbar topnav-navbar-dark' : 'topnav-navbar';\n    this.topnavTheme = this.configuredDemo === 'creative' ? 'light' : 'dark';\n    this.topnavContainerClasses = this.configuredDemo === 'creative' ? 'shadow-sm' : '';\n  }\n  /**\n   * On view init - activating horizontal layout\n  */\n  ngAfterViewInit() {\n    document.body.setAttribute('data-layout', 'topnav');\n    document.body.removeAttribute('data-leftbar-theme');\n    document.body.removeAttribute('data-leftbar-compact-mode');\n  }\n  /**\n   * changes layout configurations\n   */\n  ngOnChanges(changes) {\n    this.changeLayoutConfig();\n    if (changes[\"layoutWidth\"]) {\n      this._setRerender();\n    }\n  }\n  /**\n  * changes layout related options\n  */\n  changeLayoutConfig() {\n    // boxed vs fluid\n    document.body.setAttribute('data-layout-mode', this.layoutWidth);\n    // layout color\n    document.body.setAttribute('data-layout-color', this.layoutColor);\n  }\n  /**\n   * On settings button clicked from topbar\n   */\n  onSettingsButtonClicked() {\n    this.eventService.broadcast(LayoutEventType.SHOW_RIGHT_SIDEBAR, true);\n  }\n  /**\n   * On mobile toggle button clicked\n   */\n  onToggleMobileMenu() {\n    this.showMobileMenu = !this.showMobileMenu;\n  }\n};\n__decorate([Input()], LayoutComponent.prototype, \"layoutWidth\", void 0);\n__decorate([Input()], LayoutComponent.prototype, \"layoutColor\", void 0);\n__decorate([Input()], LayoutComponent.prototype, \"configuredDemo\", void 0);\nLayoutComponent = __decorate([Component({\n  selector: 'app-horizontal-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})], LayoutComponent);\nexport { LayoutComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}