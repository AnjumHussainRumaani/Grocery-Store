{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"productListModal\"];\nfunction BasicComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function BasicComponent_tr_25_Template_button_click_5_listener() {\n      const aisle_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.getProductsForAisle(aisle_r4.id));\n    });\n    i0.ɵɵtext(6, \"View Products\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"td\")(8, \"td\");\n    i0.ɵɵelementStart(9, \"td\", 16)(10, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function BasicComponent_tr_25_Template_button_click_10_listener() {\n      const aisle_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.removeAisle(aisle_r4));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function BasicComponent_tr_25_Template_button_click_12_listener() {\n      const aisle_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      const aisleModal_r2 = i0.ɵɵreference(28);\n      return i0.ɵɵresetView(ctx_r4.openEditAisleModal(aisle_r4, aisleModal_r2));\n    });\n    i0.ɵɵtext(13, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const aisle_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(aisle_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(aisle_r4.name);\n  }\n}\nfunction BasicComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 19);\n    i0.ɵɵtext(2, \"No aisles available. Please add a new aisle.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction BasicComponent_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"form\", 22);\n    i0.ɵɵlistener(\"ngSubmit\", function BasicComponent_ng_template_27_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.submitAisle());\n    });\n    i0.ɵɵelementStart(5, \"div\", 23)(6, \"label\", 24);\n    i0.ɵɵtext(7, \"Aisle Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 26)(10, \"button\", 27);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function BasicComponent_ng_template_27_Template_button_click_12_listener() {\n      const modal_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      return i0.ɵɵresetView(modal_r7.dismiss(\"\"));\n    });\n    i0.ɵɵtext(13, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.modalTitle);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.signupForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r4.isEditMode ? \"Update Aisle\" : \"Add Aisle\");\n  }\n}\nfunction BasicComponent_ng_template_29_div_3_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r9 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", product_r9.name, \" - $\", product_r9.price, \" (\", product_r9.quantity, \" available) \");\n  }\n}\nfunction BasicComponent_ng_template_29_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\", 31);\n    i0.ɵɵtemplate(2, BasicComponent_ng_template_29_div_3_li_2_Template, 2, 3, \"li\", 32);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.productsInAisle);\n  }\n}\nfunction BasicComponent_ng_template_29_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No products found for this aisle.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BasicComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"h4\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BasicComponent_ng_template_29_div_3_Template, 3, 1, \"div\", 29)(4, BasicComponent_ng_template_29_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"div\", 12)(7, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function BasicComponent_ng_template_29_Template_button_click_7_listener() {\n      const modal_r10 = i0.ɵɵrestoreView(_r8).$implicit;\n      return i0.ɵɵresetView(modal_r10.dismiss());\n    });\n    i0.ɵɵtext(8, \"Close\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const noProducts_r11 = i0.ɵɵreference(5);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Products in \", ctx_r4.selectedAisle == null ? null : ctx_r4.selectedAisle.name, \" aisle\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.productsInAisle.length > 0)(\"ngIfElse\", noProducts_r11);\n  }\n}\nexport class BasicComponent {\n  constructor(modalService, fb, http // Inject HttpClient here\n  ) {\n    this.modalService = modalService;\n    this.fb = fb;\n    this.http = http;\n    this.isEditMode = false;\n    this.aisleData = [];\n    this.productsInAisle = [];\n    this.selectedAisle = null;\n    this.API_URL = 'http://localhost:5100/api'; // Base URL for your API\n  }\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n    // Fetch aisles and products on initialization\n    this.fetchAisles();\n    this.fetchProducts();\n  }\n  /**\n   * Fetches aisles from the API\n   */\n  fetchAisles() {\n    this.http.get(`${this.API_URL}/aisles`).subscribe(data => {\n      this.aisleData = data;\n    });\n  }\n  /**\n   * Fetches all products from the API\n   */\n  fetchProducts() {\n    this.http.get(`${this.API_URL}/products`).subscribe(data => {\n      this.productData = data;\n    });\n  }\n  /**\n   * Fetch products for a specific aisle\n   * @param aisleId The id of the aisle to filter products for\n   */\n  getProductsForAisle(aisleId) {\n    this.http.get(`${this.API_URL}/aisles/${aisleId}/products`).subscribe(data => {\n      this.productsInAisle = data;\n      this.openProductListModal();\n    });\n  }\n  /**\n   * Opens the modal for adding an aisle\n   */\n  openAddAisleModal(content) {\n    this.isEditMode = false;\n    this.modalTitle = \"Add Aisle\";\n    this.signupForm.reset(); // Reset the form for a new entry\n    this.modalService.open(content);\n  }\n  /**\n   * Opens the modal for editing an aisle\n   * @param aisle The aisle to be edited\n   */\n  openEditAisleModal(aisle, content) {\n    this.isEditMode = true;\n    this.modalTitle = \"Edit Aisle\";\n    this.selectedAisle = aisle;\n    this.signupForm.patchValue({\n      name: aisle.name\n    });\n    this.modalService.open(content);\n  }\n  /**\n   * Submit the form for either adding or updating an aisle\n   */\n  submitAisle() {\n    if (this.isEditMode && this.selectedAisle) {\n      // Update the existing aisle\n      this.http.put(`${this.API_URL}/aisles/${this.selectedAisle.id}`, {\n        name: this.signupForm.value.name\n      }).subscribe(() => {\n        this.fetchAisles();\n        this.modalService.dismissAll();\n      });\n    } else {\n      // Add a new aisle\n      this.http.post(`${this.API_URL}/aisles`, {\n        name: this.signupForm.value.name\n      }).subscribe(() => {\n        this.fetchAisles();\n        this.modalService.dismissAll();\n      });\n    }\n  }\n  /**\n   * Removes an aisle\n   * @param aisle The aisle to be removed\n   */\n  removeAisle(aisle) {\n    this.http.delete(`${this.API_URL}/aisles/${aisle.id}`).subscribe(() => {\n      this.fetchAisles(); // Refresh the aisle list after deletion\n    });\n  }\n  /**\n   * Adds a new product to the aisle\n   * @param product The product to be added\n   */\n  addProduct(product) {\n    this.http.post(`${this.API_URL}/products`, product).subscribe(() => {\n      this.fetchProducts(); // Refresh the product list after adding\n    });\n  }\n  /**\n   * Updates an existing product\n   * @param productId The ID of the product to be updated\n   * @param product The updated product details\n   */\n  updateProduct(productId, product) {\n    this.http.put(`${this.API_URL}/products/${productId}`, product).subscribe(() => {\n      this.fetchProducts(); // Refresh the product list after updating\n    });\n  }\n  /**\n   * Deletes a product by ID\n   * @param productId The ID of the product to be deleted\n   */\n  deleteProduct(productId) {\n    this.http.delete(`${this.API_URL}/products/${productId}`).subscribe(() => {\n      this.fetchProducts(); // Refresh the product list after deletion\n    });\n  }\n  /**\n   * Open the modal to display products in the selected aisle\n   */\n  openProductListModal() {\n    const modalRef = this.modalService.open(this.productListModal, {\n      size: 'lg'\n    });\n  }\n  /**\n   * Fetch expiring soon products\n   */\n  fetchExpiringSoonProducts() {\n    this.http.get(`${this.API_URL}/product/expiring-soon`).subscribe(data => {\n      this.productData = data;\n    });\n  }\n  static #_ = this.ɵfac = function BasicComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BasicComponent)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BasicComponent,\n    selectors: [[\"app-tables-basic\"]],\n    viewQuery: function BasicComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.productListModal = _t.first);\n      }\n    },\n    decls: 31,\n    vars: 2,\n    consts: [[\"aisleModal\", \"\"], [\"productListModal\", \"\"], [\"noProducts\", \"\"], [1, \"row\", \"justify-content-center\", \"my-5\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-body\"], [1, \"d-flex\", \"justify-content-between\", \"mb-2\"], [\"onclick\", \"printTable('Aisle List','aisleTable')\", 1, \"btn\", \"btn-success\", \"mb-3\", \"me-2\"], [1, \"btn\", \"btn-primary\", \"mb-3\", 3, \"click\"], [\"id\", \"aisleTable\", 1, \"table-responsive-sm\"], [1, \"table\", \"table-bordered\", \"border-primary\", \"table-centered\", \"mb-0\"], [1, \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"table-action\", \"text-center\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-warning\", \"mx-2\", 3, \"click\"], [1, \"text-center\", \"text-muted\", \"mt-2\"], [1, \"modal-body\"], [1, \"auth-brand\", \"text-center\", \"mt-2\", \"mb-4\", \"position-relative\", \"top-0\"], [1, \"ps-3\", \"pe-3\", 3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Bakery & Bread\", \"required\", \"\", 1, \"form-control\"], [1, \"mb-3\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"btn\", \"btn-secondary\", \"mt-3\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n    template: function BasicComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5)(3, \"div\", 6)(4, \"div\", 7)(5, \"h2\");\n        i0.ɵɵtext(6, \"Aisle List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\")(8, \"button\", 8);\n        i0.ɵɵtext(9, \"Print Table\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function BasicComponent_Template_button_click_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const aisleModal_r2 = i0.ɵɵreference(28);\n          return i0.ɵɵresetView(ctx.openAddAisleModal(aisleModal_r2));\n        });\n        i0.ɵɵtext(11, \"Add Aisle\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"table\", 11)(14, \"thead\")(15, \"tr\")(16, \"th\");\n        i0.ɵɵtext(17, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Products\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\", 12);\n        i0.ɵɵtext(23, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"tbody\");\n        i0.ɵɵtemplate(25, BasicComponent_tr_25_Template, 14, 2, \"tr\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, BasicComponent_div_26_Template, 3, 0, \"div\", 14);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(27, BasicComponent_ng_template_27_Template, 14, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(29, BasicComponent_ng_template_29_Template, 9, 3, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"ngForOf\", ctx.aisleData);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.aisleData.length === 0);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}