{"ast":null,"code":"import { RouterModule } from '@angular/router';\n// auth guard\n// import { AuthGuard } from './core/guards/auth.guard';\n// components\nimport { PrivateLayoutComponent } from './layouts/private-layout/private-layout.component';\nimport { PublicLayoutComponent } from './layouts/public-layout/public-layout.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: 'tables/aisle',\n  pathMatch: 'full'\n}, {\n  path: \"\",\n  component: PrivateLayoutComponent,\n  // canActivate: [AuthGuard],\n  children: [{\n    path: \"\",\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)\n  }\n  // {\n  //   path: 'apps',\n  //   loadChildren: () => import('./apps/apps.module').then(m => m.AppsModule),\n  // }\n  ]\n}, {\n  path: \"\",\n  component: PublicLayoutComponent,\n  children: [\n    // { path: 'account', loadChildren: () => import('./account/account.module').then(m => m.AccountModule) },\n    // { path: 'error-404', component: Error404Component },\n    // { path: 'error-500', component: Error500Component },\n    // { path: 'maintenance', component: MaintenanceComponent },\n    // { path: 'landing', loadChildren: () => import('./pages/custom-pages/landing/landing.module').then(m => m.LandingModule) }\n  ]\n}];\nexport class AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes, {\n      anchorScrolling: 'enabled'\n    }), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}