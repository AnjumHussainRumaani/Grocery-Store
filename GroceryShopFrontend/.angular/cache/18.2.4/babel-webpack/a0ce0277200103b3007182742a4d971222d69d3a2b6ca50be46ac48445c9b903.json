{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\n// utility functions\nimport { findAllParent, findMenuItem } from '../helper/utils';\n// data\nimport { MENU } from '../config/menu-meta';\nlet LeftSideBarComponent = class LeftSideBarComponent {\n  constructor(router, authService, renderer) {\n    this.router = router;\n    this.authService = authService;\n    this.renderer = renderer;\n    this.includeUserProfile = false;\n    this.hideLogo = false;\n    this.isInitialized = false;\n    this.leftSidebarClass = 'sidebar-enable';\n    this.activeMenuItems = [];\n    this.loggedInUser = null;\n    this.menuItems = [];\n    router.events.forEach(event => {\n      if (event instanceof NavigationEnd) {\n        this._activateMenu(); //actiavtes menu\n        this.hideMenu(); //hides leftbaron change of route\n      }\n    });\n  }\n  ngOnInit() {\n    this.initMenu();\n    this.loggedInUser = this.authService.currentUser();\n  }\n  /**\n   * On view init - activating menuitems\n   */\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this._activateMenu();\n    });\n  }\n  /**\n   * initialize menuitems\n   */\n  initMenu() {\n    this.menuItems = MENU;\n  }\n  /**\n   * activates menu\n   */\n  _activateMenu() {\n    const div = document.getElementById('leftside-menu-container');\n    let matchingMenuItem = null;\n    if (div) {\n      let items = div.getElementsByClassName('side-nav-link-ref');\n      for (let i = 0; i < items.length; ++i) {\n        if (window.location.pathname === items[i].pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute('data-menu-key');\n        const activeMt = findMenuItem(this.menuItems, mid);\n        if (activeMt) {\n          const matchingObjs = [activeMt['key'], ...findAllParent(this.menuItems, activeMt)];\n          this.activeMenuItems = matchingObjs;\n          this.menuItems.forEach(menu => {\n            menu.collapsed = !matchingObjs.includes(menu.key);\n          });\n        }\n      }\n    }\n  }\n  /**\n   * toggles open menu\n   * @param menuItem clicked menuitem\n   * @param collapse collpase instance\n   */\n  toggleMenuItem(menuItem, collapse) {\n    collapse.toggle();\n    let openMenuItems;\n    if (!menuItem.collapsed) {\n      openMenuItems = [menuItem['key'], ...findAllParent(this.menuItems, menuItem)];\n      this.menuItems.forEach(menu => {\n        if (!openMenuItems.includes(menu.key)) {\n          menu.collapsed = true;\n        }\n      });\n    }\n  }\n  /**\n   * Returns true or false if given menu item has child or not\n   * @param item menuItem\n   */\n  hasSubmenu(menu) {\n    return menu.children ? true : false;\n  }\n  /**\n   * Hides the menubar\n   */\n  hideMenu() {\n    document.body.classList.remove('sidebar-enable');\n  }\n};\n__decorate([Input()], LeftSideBarComponent.prototype, \"navClasses\", void 0);\n__decorate([Input()], LeftSideBarComponent.prototype, \"includeUserProfile\", void 0);\n__decorate([Input()], LeftSideBarComponent.prototype, \"hideLogo\", void 0);\nLeftSideBarComponent = __decorate([Component({\n  selector: 'app-left-side-bar',\n  templateUrl: './left-side-bar.component.html',\n  styleUrls: ['./left-side-bar.component.scss']\n})], LeftSideBarComponent);\nexport { LeftSideBarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}