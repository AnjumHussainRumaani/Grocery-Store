{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"simplebar-angular\";\nconst _c0 = [\"addTodo\"];\nconst _c1 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction TodoComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 7)(2, \"div\", 8)(3, \"h5\", 9)(4, \"span\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" of \");\n    i0.ɵɵelementStart(7, \"span\", 11);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" remaining\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 12)(11, \"a\", 13);\n    i0.ɵɵlistener(\"click\", function TodoComponent_div_1_Template_a_click_11_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.archiveTasks());\n    });\n    i0.ɵɵtext(12, \"Archive\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.getInprogressTodoCount());\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.toDoItems.length);\n  }\n}\nfunction TodoComponent_li_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"input\", 17);\n    i0.ɵɵlistener(\"change\", function TodoComponent_li_4_div_1_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const todo_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleTodo(todo_r4));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 18)(3, \"s\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const todo_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", todo_r4.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", todo_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r4.text);\n  }\n}\nfunction TodoComponent_li_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"input\", 19);\n    i0.ɵɵlistener(\"change\", function TodoComponent_li_4_div_2_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const todo_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleTodo(todo_r4));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const todo_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", todo_r4.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", todo_r4.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(todo_r4.text);\n  }\n}\nfunction TodoComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 14);\n    i0.ɵɵtemplate(1, TodoComponent_li_4_div_1_Template, 5, 3, \"div\", 15)(2, TodoComponent_li_4_div_2_Template, 4, 3, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const todo_r4 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", todo_r4.status === \"completed\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", todo_r4.status === \"inprogress\");\n  }\n}\nfunction TodoComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"form\", 21, 0);\n    i0.ɵɵlistener(\"ngSubmit\", function TodoComponent_div_5_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addNewTask());\n    });\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"div\", 8)(5, \"input\", 22);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TodoComponent_div_5_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.newTask, $event) || (ctx_r1.newTask = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 23);\n    i0.ɵɵtext(7, \" Please enter your task name \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 24)(9, \"button\", 25);\n    i0.ɵɵtext(10, \"Add\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.newTask);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.submitted && ctx_r1.newTask === \"\" || ctx_r1.newTask === \" \"));\n  }\n}\nexport class TodoComponent {\n  constructor() {\n    this.toDoItems = [];\n    this.height = 0;\n    this.archivable = false;\n    this.addable = false;\n    this.newTask = '';\n    this.submitted = false;\n    this.archiveTodos = new EventEmitter();\n    this.addTask = new EventEmitter();\n  }\n  ngOnInit() {}\n  /**\n   * changes status of todo item\n   * @param todoItem todo item\n   */\n  toggleTodo(todoItem) {\n    todoItem.status = todoItem.status === 'completed' ? 'inprogress' : 'completed';\n  }\n  /**\n   * archives completed tasks\n   */\n  archiveTasks() {\n    this.archiveTodos.emit();\n  }\n  /**\n   * adds new task in todo list\n   */\n  addNewTask() {\n    this.submitted = true;\n    if (this.newTask !== '') {\n      this.addTask.emit(this.newTask);\n      this.newTask = '';\n      this.submitted = false;\n    }\n  }\n  /**\n  * Returns the remaining todos\n  */\n  getInprogressTodoCount() {\n    return this.toDoItems.filter(todoItem => todoItem.status === 'inprogress').length;\n  }\n  static #_ = this.ɵfac = function TodoComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TodoComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoComponent,\n    selectors: [[\"app-widget-todo\"]],\n    viewQuery: function TodoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addTodo = _t.first);\n      }\n    },\n    inputs: {\n      toDoItems: \"toDoItems\",\n      height: \"height\",\n      archivable: \"archivable\",\n      addable: \"addable\"\n    },\n    outputs: {\n      archiveTodos: \"archiveTodos\",\n      addTask: \"addTask\"\n    },\n    decls: 6,\n    vars: 7,\n    consts: [[\"addTodo\", \"ngForm\"], [1, \"todoapp\"], [\"class\", \"card-body py-0\", 4, \"ngIf\"], [1, \"card-body\", \"py-0\"], [\"id\", \"todo-list\", 1, \"list-group\", \"list-group-flush\", \"todo-list\"], [\"class\", \"list-group-item border-0 ps-0\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"card-body pt-2\", 4, \"ngIf\"], [1, \"row\"], [1, \"col\"], [\"id\", \"todo-message\"], [\"id\", \"todo-remaining\"], [\"id\", \"todo-total\"], [1, \"col-auto\"], [\"href\", \"javascript:void(0)\", \"id\", \"btn-archive\", 1, \"float-end\", \"btn\", \"btn-light\", \"btn-sm\", 3, \"click\"], [1, \"list-group-item\", \"border-0\", \"ps-0\"], [\"class\", \"form-check mb-0\", 4, \"ngIf\"], [1, \"form-check\", \"mb-0\"], [\"type\", \"checkbox\", \"checked\", \"\", 1, \"form-check-input\", \"todo-done\", 3, \"change\", \"id\"], [1, \"form-check-label\", 3, \"for\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"change\", \"id\"], [1, \"card-body\", \"pt-2\"], [\"name\", \"todo-form\", 3, \"ngSubmit\"], [\"type\", \"text\", \"id\", \"todo-input-text\", \"name\", \"todo-input-text\", \"placeholder\", \"Add new todo\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\"], [1, \"invalid-feedback\"], [1, \"col-auto\", \"d-grid\"], [\"type\", \"submit\", \"id\", \"todo-btn-submit\", 1, \"btn-primary\", \"btn-md\", \"btn\", \"waves-effect\", \"waves-light\"]],\n    template: function TodoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1);\n        i0.ɵɵtemplate(1, TodoComponent_div_1_Template, 13, 2, \"div\", 2);\n        i0.ɵɵelementStart(2, \"ngx-simplebar\", 3)(3, \"ul\", 4);\n        i0.ɵɵtemplate(4, TodoComponent_li_4_Template, 3, 2, \"li\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, TodoComponent_div_5_Template, 11, 4, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.archivable);\n        i0.ɵɵadvance();\n        i0.ɵɵstyleProp(\"max-height\", ctx.height, \"px\");\n        i0.ɵɵclassProp(\"mb-0\", ctx.addable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.toDoItems);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.addable);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.SimplebarAngularComponent]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}