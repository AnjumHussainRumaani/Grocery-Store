{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nfunction ProductComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 14)(12, \"div\", 15)(13, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ProductComponent_tr_29_Template_button_click_13_listener() {\n      const product_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      const productModal_r2 = i0.ɵɵreference(32);\n      return i0.ɵɵresetView(ctx_r4.openEditProductModal(product_r4, productModal_r2));\n    });\n    i0.ɵɵtext(14, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ProductComponent_tr_29_Template_button_click_15_listener() {\n      const product_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.removeProduct(product_r4));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const product_r4 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r4.price);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r4.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.formatDate(product_r4.expiryDate));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.FORMproduct.purchaseDate);\n  }\n}\nfunction ProductComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 18);\n    i0.ɵɵtext(2, \"No products available. Please add a new product.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ProductComponent_ng_template_31_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const aisle_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", aisle_r7.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(aisle_r7.name);\n  }\n}\nfunction ProductComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 20);\n    i0.ɵɵlistener(\"ngSubmit\", function ProductComponent_ng_template_31_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.submitProduct());\n    });\n    i0.ɵɵelementStart(4, \"div\", 21)(5, \"label\", 22);\n    i0.ɵɵtext(6, \"Product Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 21)(9, \"label\", 24);\n    i0.ɵɵtext(10, \"Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 21)(13, \"label\", 26);\n    i0.ɵɵtext(14, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 21)(17, \"label\", 28);\n    i0.ɵɵtext(18, \"Expiry Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 21)(21, \"label\", 30);\n    i0.ɵɵtext(22, \"Date of Purchase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 21)(25, \"label\", 32);\n    i0.ɵɵtext(26, \"Aisle Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"select\", 33);\n    i0.ɵɵtemplate(28, ProductComponent_ng_template_31_option_28_Template, 2, 2, \"option\", 34);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 11)(30, \"button\", 35);\n    i0.ɵɵtext(31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ProductComponent_ng_template_31_Template_button_click_32_listener() {\n      const modal_r8 = i0.ɵɵrestoreView(_r6).$implicit;\n      return i0.ɵɵresetView(modal_r8.dismiss(\"\"));\n    });\n    i0.ɵɵtext(33, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.modalTitle);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.productForm);\n    i0.ɵɵadvance(25);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.aisleList);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.isEditMode ? \"Update Product\" : \"Add Product\");\n  }\n}\nexport class ProductComponent {\n  constructor(modalService, fb, http,\n  // Inject HttpClient\n  datePipe // Inject DatePipe\n  ) {\n    this.modalService = modalService;\n    this.fb = fb;\n    this.http = http;\n    this.datePipe = datePipe;\n    this.isEditMode = false;\n    this.productData = [];\n    this.aisleList = [];\n    this.selectedProduct = null;\n    // Base URL for API endpoints\n    this.baseUrl = 'http://localhost:5100/api';\n  }\n  ngOnInit() {\n    this._fetchProductData();\n    this._fetchAisleData();\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      quantity: [0, Validators.required],\n      expiryDate: ['', Validators.required],\n      purchaseDate: ['', Validators.required],\n      aisleId: ['', Validators.required]\n    });\n  }\n  // Fetch product data using GET API\n  _fetchProductData() {\n    this.http.get(`${this.baseUrl}/products`).subscribe(data => {\n      this.productData = data;\n    });\n  }\n  // Fetch aisle data using GET API\n  _fetchAisleData() {\n    this.http.get(`${this.baseUrl}/aisles`).subscribe(data => {\n      this.aisleList = data;\n    });\n  }\n  // Open the modal to add a new product\n  openAddProductModal(content) {\n    this.isEditMode = false;\n    this.modalTitle = \"Add Product\";\n    this.productForm.reset();\n    this.modalService.open(content);\n  }\n  // Open the modal to edit an existing product\n  openEditProductModal(product, content) {\n    this.isEditMode = true;\n    this.modalTitle = \"Edit Product\";\n    this.selectedProduct = product;\n    this.productForm.patchValue(product);\n    this.modalService.open(content);\n  }\n  // Submit product form (POST for new product, PUT for update)\n  submitProduct() {\n    if (this.isEditMode && this.selectedProduct) {\n      this.updateProduct(this.selectedProduct.id);\n    } else {\n      this.addProduct();\n    }\n  }\n  // Add new product using POST API\n  addProduct() {\n    const newProduct = this.productForm.value;\n    this.http.post(`${this.baseUrl}/products`, newProduct).subscribe(addedProduct => {\n      this.productData.push(addedProduct);\n      this.modalService.dismissAll();\n    });\n  }\n  // Update existing product using PUT API\n  updateProduct(productId) {\n    const updatedProduct = this.productForm.value;\n    this.http.put(`${this.baseUrl}/products/${productId}`, updatedProduct).subscribe(updatedData => {\n      const index = this.productData.findIndex(p => p.id === productId);\n      if (index > -1) {\n        this.productData[index] = updatedData;\n      }\n      this.modalService.dismissAll();\n    });\n  }\n  // Delete product using DELETE API\n  removeProduct(product) {\n    this.http.delete(`${this.baseUrl}/products/${product.id}`).subscribe(() => {\n      const index = this.productData.indexOf(product);\n      if (index > -1) {\n        this.productData.splice(index, 1);\n      }\n    });\n  }\n  // Transform date using DatePipe\n  formatDate(date) {\n    if (!date) return 'No Date';\n    return this.datePipe.transform(date, 'shortDate') || 'Invalid Date';\n  }\n  // Fetch expiring soon products\n  fetchExpiringSoonProducts() {\n    this.http.get(`${this.baseUrl}/products/expiring-soon`).subscribe(data => {\n      console.log('Expiring soon products:', data);\n    });\n  }\n  static #_ = this.ɵfac = function ProductComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ProductComponent)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.DatePipe));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductComponent,\n    selectors: [[\"app-product\"]],\n    decls: 33,\n    vars: 2,\n    consts: [[\"productModal\", \"\"], [1, \"row\", \"justify-content-center\", \"my-5\"], [1, \"col-md-10\"], [1, \"card\"], [1, \"card-body\"], [1, \"d-flex\", \"justify-content-between\", \"mb-2\"], [1, \"header-title\"], [\"onclick\", \"printTable('Product List','productTable')\", 1, \"btn\", \"btn-success\", \"mb-3\", \"me-2\"], [1, \"btn\", \"btn-primary\", \"mb-3\", 3, \"click\"], [\"id\", \"productTable\", 1, \"table-responsive-sm\"], [1, \"table\", \"table-bordered\", \"border-primary\", \"table-centered\", \"mb-0\"], [1, \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"table-action\", \"text-center\"], [1, \"d-flex\"], [1, \"btn\", \"btn-warning\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"text-center\", \"text-muted\", \"mt-2\"], [1, \"modal-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"price\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"quantity\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"quantity\", \"formControlName\", \"quantity\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"expiryDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"expiryDate\", \"formControlName\", \"expiryDate\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"purchaseDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"purchaseDate\", \"formControlName\", \"purchaseDate\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"aisleId\", 1, \"form-label\"], [\"id\", \"aisleId\", \"formControlName\", \"aisleId\", \"required\", \"\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [3, \"value\"]],\n    template: function ProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"h4\", 6);\n        i0.ɵɵtext(6, \"Product List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\")(8, \"button\", 7);\n        i0.ɵɵtext(9, \"Print Table\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ProductComponent_Template_button_click_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const productModal_r2 = i0.ɵɵreference(32);\n          return i0.ɵɵresetView(ctx.openAddProductModal(productModal_r2));\n        });\n        i0.ɵɵtext(11, \"Add Product\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 9)(13, \"table\", 10)(14, \"thead\")(15, \"tr\")(16, \"th\");\n        i0.ɵɵtext(17, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23, \"Expiry Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\");\n        i0.ɵɵtext(25, \"Date of Purchase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\", 11);\n        i0.ɵɵtext(27, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"tbody\");\n        i0.ɵɵtemplate(29, ProductComponent_tr_29_Template, 17, 5, \"tr\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(30, ProductComponent_div_30_Template, 3, 0, \"div\", 13);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(31, ProductComponent_ng_template_31_Template, 34, 4, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(29);\n        i0.ɵɵproperty(\"ngForOf\", ctx.productData);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.productData.length === 0);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}