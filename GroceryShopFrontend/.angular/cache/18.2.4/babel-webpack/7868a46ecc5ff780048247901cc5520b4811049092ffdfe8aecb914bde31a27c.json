{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../account2/account2.component\";\nconst _c0 = () => [\"../login2\"];\nconst _c1 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction PasswordReset2Component_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1, \"Enter your email address and we'll send you an email with instructions to reset your password.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordReset2Component_ngb_alert_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngb-alert\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dismissible\", false);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.successMessage, \" \");\n  }\n}\nfunction PasswordReset2Component_form_5_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordReset2Component_form_5_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email must be a valid Email Address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordReset2Component_form_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, PasswordReset2Component_form_5_div_5_div_1_Template, 2, 0, \"div\", 18)(2, PasswordReset2Component_form_5_div_5_div_2_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formValues.email.errors == null ? null : ctx_r0.formValues.email.errors.required);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formValues.email.errors == null ? null : ctx_r0.formValues.email.errors.email);\n  }\n}\nfunction PasswordReset2Component_form_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function PasswordReset2Component_form_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"label\", 11);\n    i0.ɵɵtext(3, \"Email address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 12);\n    i0.ɵɵtemplate(5, PasswordReset2Component_form_5_div_5_Template, 3, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 14)(7, \"button\", 15);\n    i0.ɵɵelement(8, \"i\", 16);\n    i0.ɵɵtext(9, \" Reset Password \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.resetPassswordForm2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, ctx_r0.formSubmitted && ctx_r0.formValues.email.invalid));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formSubmitted && ctx_r0.formValues.email.invalid);\n  }\n}\nexport class PasswordReset2Component {\n  constructor(fb) {\n    this.fb = fb;\n    this.formSubmitted = false;\n    this.successMessage = \"\";\n  }\n  ngOnInit() {\n    this.resetPassswordForm2 = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  ngAfterViewInit() {\n    document.body.classList.add('authentication-bg');\n  }\n  /**\n   * convenience getter for easy access to form fields\n   */\n  get formValues() {\n    return this.resetPassswordForm2.controls;\n  }\n  /**\n   * On form submit\n   */\n  onSubmit() {\n    this.formSubmitted = true;\n    if (this.resetPassswordForm2.valid) {\n      this.successMessage = \"We have sent you an email containing a link to reset your password\";\n    }\n  }\n  static #_ = this.ɵfac = function PasswordReset2Component_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PasswordReset2Component)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordReset2Component,\n    selectors: [[\"app-password-reset2\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[1, \"mt-0\"], [\"class\", \"text-muted mb-4\", 4, \"ngIf\"], [\"type\", \"success\", \"class\", \"mt-3\", 3, \"dismissible\", 4, \"ngIf\"], [\"name\", \"reset-password-form\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"footer\", \"footer-alt\"], [1, \"text-muted\"], [1, \"text-muted\", \"ms-1\", 3, \"routerLink\"], [1, \"text-muted\", \"mb-4\"], [\"type\", \"success\", 1, \"mt-3\", 3, \"dismissible\"], [\"name\", \"reset-password-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"emailaddress\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"emailaddress\", \"placeholder\", \"Enter your email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"mb-0\", \"text-center\", \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"mdi\", \"mdi-lock-reset\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function PasswordReset2Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-account2-layout\")(1, \"h4\", 0);\n        i0.ɵɵtext(2, \"Reset Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, PasswordReset2Component_p_3_Template, 2, 0, \"p\", 1)(4, PasswordReset2Component_ngb_alert_4_Template, 2, 2, \"ngb-alert\", 2)(5, PasswordReset2Component_form_5_Template, 10, 5, \"form\", 3);\n        i0.ɵɵelementStart(6, \"footer\", 4)(7, \"p\", 5);\n        i0.ɵɵtext(8, \"Back to \");\n        i0.ɵɵelementStart(9, \"a\", 6)(10, \"b\");\n        i0.ɵɵtext(11, \"Log In\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.successMessage === \"\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.successMessage !== \"\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.successMessage === \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.NgbAlert, i4.RouterLink, i5.Account2Component]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}